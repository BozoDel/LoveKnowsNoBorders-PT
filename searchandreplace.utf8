#v1
regEx.b=true
dotAll.b=false
ignoreCase.b=false
multiLine.b=true
target.b=true
source.b=false
replaceALL.b=true
replacementsPath=
logPath=/home/bozodel/Downloads/okapilog.utf8
saveLog.b=false

REMEMBER: YOU HAVE TO REPLACE ALL INSTANCES OF "LANGUAGE" WITH THE RIGHT LANGUAGE

If you add a new rule, you must update this number to the new total of rules.
count.i=20

Rules ranging from 0 to 8 are meant to strip all XML away. Besides that, rules from 0 to 2 also put the address of the page to be translated a few newlines above the actual page text, and add some more newlines between pages. Rule number 2 also puts a big translated title, that will be shown below the official title, and set the page's RealLink and DisplayName, properties that will be used by inline queries.
use0=true
search0=<mediawiki[\s\S]*?<title>
replace0=https://www.love2d.org/wiki/
use1=true
search1=</text>[\s\S]*?<title>
replace1=\n\n\n\n\nhttps://www.love2d.org/wiki/
use2=true
search2=(?<=https://www.love2d.org/wiki/)(.*?)</title>[\s\S]*?<text.*?>
replace2=$1_(Português)\n\n\n<span style="color: #597E9A; font-size: 18pt">$1</span>\n\{\{#set:RealLink=$1 (Português)}}\n\{\{#set:DisplayName=$1}}\n
use3=true
search3=</text>[\s\S]*?</mediawiki>
replace3=
use4=true
search4=&quot;
replace4="
use5=true
search5=&amp;
replace5=&
use6=true
search6=&apos;
replace6='
use7=true
search7=&lt;
replace7=<
use8=true
search8=&gt;
replace8=>

This regex goes through all occurrences of the param template and does two things: it replaces the first argument (the page's real name) with its translated counterpart and it adds a fourth argument containing the page's display name. The display name is a copy of the real name (without the " (Português)" part), but the real name will remain unaltered after this, while the display name will be passed on to the translator.
use9=true
search9=(\{{2}param\|)([^|]*)(\|[^|]*\|[^}]*)(}{2})
replace9=$1$2 (Português)$3|$2$4

This regex adds two extra parameters to inline queries, allowing it to display pages' display names, however still linking to their real names.
use10=true
search10=(\{{2}#ask[^}]*[^\r\n])([\r\n]?}{2})
replace10=$1\n| ?RealLink# -\n| ?DisplayName# -$2

"parent::" and "Constructs::" properties are set in the pages and searched by inline queries. The regex below replaces page names inside the queries with their translated counterparts. It's a bit complex because sometimes there'll be two or three parent pages in a single search, separated by "||", for example: [[parent::SoundData||Data||Object]].
use11=true
search11=((]|:) *\[{2}(parent|Constructs)::|\|{2})([^\]|]+)(?=]{2}|\|{2}[^}]*]{2})
replace11=$1$4 (Português)

If the newin and oldin templates have been translated, even if just the first line, then we need to replace the untranslated with the translated ones. Just to be clear, this replaces the templates, not their additional text. I don't think the negative lookahead part is necessary anymore, but it's not doing any harm, so I'll leave it there.
use12=true
search12=(\{{2}(new|old)in(?! \(Português\)))([^}]*?text=[^|}]*[^}]*}{2})
replace12=$1 (Português)$3

Replaces newobjectnotice and Changelog/header template occurences with the translated version. Assumes there's a translated version.
use13=true
search13=(\{{2}(newobjectnotice|Changelog/header))(}{2})
replace13=$1 (Português)$3

Same as the above, but for the New_feature template. I think the template works the same, regardless whether it uses an underline or a space, so I included both, just in case.
use14=true
search14=(\{{2}New( |_)feature)(\|)
replace14=$1 (Português)$3

The following regexes replace very specific occurrences of newin, when there is no text. Here's how it works: if no text is defined, newin generates text based on its arguments, but to translate that semi-automatic feature would take quite some work, and sometimes the addition of new parameters. But it's easy to avoid that by simply defining the text. So we take the text that would be generated in each situation, add it, and it will be sent to translation, along with all oldins and newins that had text already.
Of course, if the text generating feature has been translated, then its best to disable these regexes, and possibly replace them with something else.
use15=true
search15=(\{{2}newin)(\|([^|]+\|){2}type=function)(}{2})
replace15=$1 (Português)$2|text=This function is not supported in earlier versions$4
use16=true
search16=(\{{2}newin)(\|([^|]+\|){2}type=enum)(}{2})
replace16=$1 (Português)$2|text=This enum is not supported in earlier versions$4
use17=true
search17=(\{{2}newin)(\|([^|]+\|){2}type=variant)(}{2})
replace17=$1 (Português)$2|text=This variant is not supported in earlier versions$4
use18=true
search18=(\{{2}newin)(\|([^|]+\|){2}type=module)(}{2})
replace18=$1 (Português)$2|text=This module is not supported in earlier versions$4
use19=true
search19=(\{{2}oldin)(\|([^|]+\|){2}type=function)(}{2})
replace19=$1 (Português)$2|text=This function is not supported in that and later versions$4
